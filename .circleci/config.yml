version: 2
jobs:
  android-test:
    docker:     
      - 
        environment: 
          ANDROID_PLATFORM: android-18
        image: tomaka/cargo-apk
    steps:
      - checkout
      - run: echo 'export KEYSTORE=${HOME}/project/my-release-key.keystore' >> $BASH_ENV
      - run: "ls .circleci"
      - run: "ls ${ANDROID_HOME}/build-tools"
      - run: echo 'export PATH=${ANDROID_HOME}/build-tools/26.0.1:${PATH}' >> $BASH_ENV
      - run: "chmod +x .circleci/download_keystore.sh"
      - run: "./.circleci/download_keystore.sh"     
      - run: rustup self update
      - run: rustup default stable
      - run: rustup target add arm-linux-androideabi
      - run: rustup target add armv7-linux-androideabi
      - run: rustup update
      - run: rustc --version
      - run: apt-get -qq update
      - run: "apt-get -y install libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev \   gstreamer1.0-plugins-base gstreamer1.0-plugins-good \    gstreamer1.0-plugins-bad gstreamer1.0-plugins-ugly \     gstreamer1.0-libav libgstrtspserver-1.0-dev libglib2.0-dev"
      - run: apt-get install python-software-properties software-properties-common -y --fix-missing
      - run: sudo apt-add-repository "deb http://apt.llvm.org/xenial/ llvm-toolchain-xenial-6.0 main"
      - run: wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | sudo apt-key add -
      - run: apt-get -qq update && apt-get install -y git
      - run: apt-get install -y clang-6.0
      - run: "git clone https://github.com/tomaka/android-rs-glue.git && cd android-rs-glue && git reset --hard 8ad069e3bcad7523b95ed12946725f4bbbb2572e && cargo install --path cargo-apk --force"
      - run: mkdir gstreamer
      - run: cd gstreamer && wget http://servo-deps.s3.amazonaws.com/gstreamer/gstreamer-armeabi-v7a-1.14.3-20181004-142930.zip -O lib.zip
      - run: cd gstreamer && unzip lib.zip
      - run: cd gstreamer/gst-build-armeabi && ls
      - run: echo 'export GST_LIB_DIR=/root/project/gstreamer/gst-build-armeabi' >> $BASH_ENV
      - run: perl -i -pe "s#libdir=.*#libdir=${GST_LIB_DIR}#g" $GST_LIB_DIR/pkgconfig/*
      - run: echo 'export PKG_CONFIG_PATH=/root/project/gstreamer/gst-build-armeabi/pkgconfig' >> $BASH_ENV
      #- run: cd gstreamer && wget https://gstreamer.freedesktop.org/data/pkg/android/1.14.3/gstreamer-1.0-android-universal-1.14.3.tar.bz2
      #- run: cd gstreamer && tar xvjf gstreamer-1.0-android-universal-1.14.3.tar.bz2
      #- run: sed -i "s;prefix=/root/gstreamer;prefix=$PWD/gstreamer/arm;g" $PWD/gstreamer/arm/lib/pkgconfig/*.pc 
      #- run: echo 'export PKG_CONFIG_PATH=$PWD/gstreamer/arm/lib/pkgconfig' >> $BASH_ENV
      - run: PKG_CONFIG_ALLOW_CROSS=1 cargo apk build --release --verbose
      - run: "ls target/android-artifacts/app/build/outputs/apk"
      - run: "ls target/android-artifacts/app"
      
      - run: "ls target/android-artifacts/app/build/outputs/apk"
      - run: "pwd"
      - run: "jarsigner -verbose -sigalg SHA1withRSA -storepass ${KEYPHRASE} -digestalg SHA1 -keystore my-release-key.keystore ${HOME}/project/target/android-artifacts/app/build/outputs/apk/app-release-unsigned.apk rustropy"
      - run: "zipalign -f 4 ${HOME}/project/target/android-artifacts/app/build/outputs/apk/app-release-unsigned.apk ${HOME}/project/target/android-artifacts/app/build/outputs/apk/outfile.apk"
      - run: "chmod +x .circleci/upload_github_release.sh"
      - 
        run: 
          command: "./.circleci/upload_github_release.sh"
          name: "Deploy to github"
workflows:
  version: 2
  build-test-and-deploy:
    jobs:
      - android-test
